/*!
 * Start Bootstrap - Creative v5.1.8 (https://startbootstrap.com/template-overviews/creative)
 * Copyright 2013-2020 Start Bootstrap
 * Licensed under MIT (https://github.com/BlackrockDigital/startbootstrap-creative/blob/master/LICENSE)
 */

var container=document.getElementsByClassName("renderObject")[0],scene=new THREE.Scene,renderer=new THREE.WebGLRenderer;renderer.shadowMap.enabled=!0,renderer.shadowMap.type=THREE.PCFSoftShadowMap,renderer.setSize(container.scrollWidth,container.scrollHeight);var material_grey=new THREE.MeshPhongMaterial({color:6316128}),material_light=new THREE.MeshPhongMaterial({color:13684944}),material_selectable=new THREE.MeshPhongMaterial({color:13656144}),cone_geometry1=new THREE.ConeGeometry(1,2,15),cone_mesh1=new THREE.Mesh(cone_geometry1,material_light);cone_mesh1.castShadow=!0;var cone_geometry2=new THREE.ConeGeometry(1,1,15),cone_mesh2=new THREE.Mesh(cone_geometry2,material_light);cone_mesh2.castShadow=!0;var sphere_geometry1=new THREE.SphereGeometry(1,15,15),sphere_mesh1=new THREE.Mesh(sphere_geometry1,material_light);sphere_mesh1.castShadow=!0;var cube_geometry1=new THREE.CubeGeometry(5,1,1),cube_mesh1=new THREE.Mesh(cube_geometry1,material_light);cube_mesh1.castShadow=!0;var cube_geometry2=new THREE.CubeGeometry(7,1,1),cube_mesh2=new THREE.Mesh(cube_geometry2,material_light);cube_mesh2.castShadow=!0;var floor_geometry=new THREE.PlaneGeometry(10,10),floor_mesh=new THREE.Mesh(floor_geometry,material_grey);floor_mesh.receiveShadow=!0;var directionalLight=new THREE.DirectionalLight(16777215,1,100);directionalLight.position.set(1.1,1.5,1.3),directionalLight.castShadow=!0;var light=new THREE.AmbientLight(2105376),camera=new THREE.PerspectiveCamera(75,container.scrollWidth/container.scrollHeight,.1,1e3),controls=new THREE.OrbitControls(camera,renderer.domElement);if(controls.enableDamping=!0,controls.dampingFactor=.05,controls.enableZoom=!0,controls.screenSpacePanning=!1,controls.minDistance=1,controls.maxDistance=100,controls.maxPolarAngle=Math.PI/2.1,scene.add(cone_mesh1),scene.add(cone_mesh2),scene.add(sphere_mesh1),scene.add(cube_mesh1),scene.add(cube_mesh2),scene.add(floor_mesh),scene.add(directionalLight),scene.add(light),WEBGL.isWebGLAvailable())container.appendChild(renderer.domElement),start(),animate();else{var warning=WEBGL.getWebGLErrorMessage();container.appendChild(warning)}function onWindowResize(){camera.aspect=container.scrollWidth/container.scrollHeight,camera.updateProjectionMatrix(),renderer.setSize(container.scrollWidth,container.scrollHeight)}function start(){scene.background=new THREE.Color(15790320),camera.position.set(0,5,5),cone_mesh1.position.set(2,1,0),cone_mesh2.position.set(-1,.5,1),sphere_mesh1.position.set(0,.9,-2),cube_mesh1.position.set(0,.5,3.2),cube_mesh2.position.set(-3,.5,.2),cube_mesh2.rotation.y=Math.PI/2,floor_mesh.rotation.x=-Math.PI/2,controls.update(),console.log("Started")}function animate(){requestAnimationFrame(animate),controls.update(),renderer.render(scene,camera)}window.addEventListener("resize",onWindowResize,!1);